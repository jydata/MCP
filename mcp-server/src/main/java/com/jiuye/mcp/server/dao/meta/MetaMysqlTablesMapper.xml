<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiuye.mcp.server.dao.meta.MetaMysqlTablesMapper" >

    <resultMap id="baseResultMap" type="com.jiuye.mcp.server.model.meta.MetaMysqlTablesEntity">
        <result column="src_id" property="srcId" jdbcType="BIGINT"/>
        <result column="table_schema" property="tableSchema" jdbcType="VARCHAR"/>
        <result column="table_name" property="tableName" jdbcType="VARCHAR"/>
        <result column="engine" property="engine" jdbcType="VARCHAR"/>
        <result column="table_rows" property="tableRows" jdbcType="VARCHAR"/>
        <result column="table_collation" property="tableCollation" jdbcType="VARCHAR"/>
        <result column="table_comment" property="tableComment" jdbcType="VARCHAR"/>
        <result column="tableCount" property="tableCount" jdbcType="INTEGER" />
    </resultMap>

    <select id="querySrcTableCount" parameterType="com.jiuye.mcp.server.model.meta.MetaMysqlTablesEntity" resultMap="baseResultMap">
        select src_id, table_schema, count(table_name) as tableCount
        from meta_mysql_tables
        where src_id = #{srcId, jdbcType=BIGINT}
        and table_schema = #{tableSchema, jdbcType=VARCHAR}
        group by table_schema
    </select>

    <!-- query table meta -->
    <select id="query" parameterType="com.jiuye.mcp.server.model.meta.MetaMysqlTablesEntity" resultMap="baseResultMap">
        SELECT src_id, table_schema, table_name, engine, table_rows, table_collation, table_comment
        FROM meta_mysql_tables
        where src_id = #{srcId, jdbcType=BIGINT}
        <if test="(tableSchema != null and tableSchema !='')" >
            and table_schema = #{tableSchema, jdbcType=VARCHAR}
        </if>
        <if test="(tableName != null and tableName !='')" >
            and table_name = #{tableName, jdbcType=VARCHAR}
        </if>
    </select>

    <!-- query table list -->
    <select id="queryList" parameterType="java.lang.Long" resultMap="baseResultMap">
        SELECT table_schema, table_name
        FROM meta_mysql_tables
        where src_id = #{_parameter, jdbcType=BIGINT}
    </select>

    <!-- query table count -->
    <select id="count" resultType="java.lang.Integer">
        SELECT count(1) as tablecount
        FROM meta_mysql_tables
        where src_id = #{srcId, jdbcType=BIGINT}
        <if test="(tableSchema != null and tableSchema !='')" >
            and table_schema = #{tableSchema, jdbcType=VARCHAR}
        </if>
        <if test="(tableName != null and tableName !='')" >
            and table_name = #{tableName, jdbcType=VARCHAR}
        </if>
    </select>

    <insert id="saveBatch" parameterType="java.util.List">
        insert into meta_mysql_tables
        (src_id, table_catalog, table_schema, table_name, table_type, engine, version, row_format,
        table_rows, avg_row_length, data_length, max_data_length, index_length, data_free,
        auto_increment, create_time, update_time, check_time, table_collation, checksum, create_options, table_comment)
        values
        <foreach collection="list" item="tabInfo" index="index" separator=",">
            (
            #{tabInfo.srcId,jdbcType=INTEGER},
            #{tabInfo.tableCatalog, jdbcType=VARCHAR},
            #{tabInfo.tableSchema, jdbcType=VARCHAR},
            #{tabInfo.tableName, jdbcType=VARCHAR},
            #{tabInfo.tableType, jdbcType=VARCHAR},
            #{tabInfo.engine, jdbcType=VARCHAR},
            #{tabInfo.version, jdbcType=BIGINT},
            #{tabInfo.rowFormat, jdbcType=VARCHAR},
            #{tabInfo.tableRows, jdbcType=BIGINT},
            #{tabInfo.avgRowLength, jdbcType=BIGINT},
            #{tabInfo.dataLength, jdbcType=BIGINT},
            #{tabInfo.maxDataLength, jdbcType=BIGINT},
            #{tabInfo.indexLength, jdbcType=BIGINT},
            #{tabInfo.dataFree, jdbcType=BIGINT},
            #{tabInfo.autoIncrement, jdbcType=BIGINT},
            #{tabInfo.createTime, jdbcType=TIMESTAMP},
            #{tabInfo.updateTime, jdbcType=TIMESTAMP},
            #{tabInfo.checkTime, jdbcType=TIMESTAMP},
            #{tabInfo.tableCollation, jdbcType=VARCHAR},
            #{tabInfo.checksum, jdbcType=BIGINT},
            #{tabInfo.createOptions, jdbcType=VARCHAR},
            #{tabInfo.tableComment, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="delete">
        DELETE FROM meta_mysql_tables WHERE
        <foreach collection="syncList" item="item" separator=" OR ">
            (src_id = #{srcId,jdbcType=BIGINT}
            AND table_schema = #{item.dbName,jdbcType=VARCHAR}
            AND table_name = #{item.tableName,jdbcType=VARCHAR})
        </foreach>
    </delete>

</mapper>